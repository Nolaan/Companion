#############################################################################
# Makefile for building: companion
# Generated by qmake (2.01a) (Qt 4.8.6) on: ven. oct. 24 15:30:41 2014
# Project:  companion.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/lib64/qt4/mkspecs/linux-g++ -o Makefile companion.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I/usr/include/kde4 -Igui, -Icore, -Iutil -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-z,relro
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L/usr/lib64/kde4/devel/ -L/lib64/ -lkio -luuid -lblkid -lusb-1.0 -lparted -lkdeui -lkdecore -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		core/copysource.cpp \
		core/copysourcedevice.cpp \
		core/copysourcefile.cpp \
		core/copytarget.cpp \
		core/copytargetdevice.cpp \
		core/copytargetfile.cpp \
		core/devboard.cpp \
		core/device.cpp \
		core/libparted.cpp \
		core/operationrunner.cpp \
		core/operationstack.cpp \
		core/partition.cpp \
		core/partitionnode.cpp \
		core/partitionrole.cpp \
		core/partitiontable.cpp \
		fs/ext2.cpp \
		fs/ext3.cpp \
		fs/ext4.cpp \
		fs/extended.cpp \
		fs/fat16.cpp \
		fs/fat32.cpp \
		fs/filesystem.cpp \
		fs/filesystemfactory.cpp \
		fs/hfs.cpp \
		fs/hfsplus.cpp \
		fs/jfs.cpp \
		fs/linuxswap.cpp \
		fs/ntfs.cpp \
		fs/reiser4.cpp \
		fs/reiserfs.cpp \
		fs/ufs.cpp \
		fs/unformatted.cpp \
		fs/unknown.cpp \
		fs/xfs.cpp \
		gui/parttablewidget.cpp \
		gui/partwidget.cpp \
		gui/partwidgetbase.cpp \
		jobs/backupfilesystemjob.cpp \
		jobs/checkfilesystemjob.cpp \
		jobs/copyfilesystemjob.cpp \
		jobs/createfilesystemjob.cpp \
		jobs/createpartitionjob.cpp \
		jobs/createpartitiontablejob.cpp \
		jobs/deletefilesystemjob.cpp \
		jobs/deletepartitionjob.cpp \
		jobs/job.cpp \
		jobs/movefilesystemjob.cpp \
		jobs/resizefilesystemjob.cpp \
		jobs/restorefilesystemjob.cpp \
		jobs/setfilesystemlabeljob.cpp \
		jobs/setpartflagsjob.cpp \
		jobs/setpartgeometryjob.cpp \
		ops/backupoperation.cpp \
		ops/checkoperation.cpp \
		ops/copyoperation.cpp \
		ops/createfilesystemoperation.cpp \
		ops/createpartitiontableoperation.cpp \
		ops/deleteoperation.cpp \
		ops/newoperation.cpp \
		ops/operation.cpp \
		ops/resizeoperation.cpp \
		ops/restoreoperation.cpp \
		ops/setfilesystemlabeloperation.cpp \
		ops/setpartflagsoperation.cpp \
		util/capacity.cpp \
		util/externalcommand.cpp \
		util/globallog.cpp \
		util/helpers.cpp \
		util/report.cpp moc_mainwindow.cpp \
		moc_device.cpp \
		moc_operationrunner.cpp \
		moc_partitionnode.cpp \
		moc_parttablewidget.cpp \
		moc_partwidget.cpp \
		moc_job.cpp \
		moc_backupoperation.cpp \
		moc_checkoperation.cpp \
		moc_copyoperation.cpp \
		moc_createfilesystemoperation.cpp \
		moc_createpartitiontableoperation.cpp \
		moc_deleteoperation.cpp \
		moc_newoperation.cpp \
		moc_operation.cpp \
		moc_resizeoperation.cpp \
		moc_restoreoperation.cpp \
		moc_setfilesystemlabeloperation.cpp \
		moc_setpartflagsoperation.cpp \
		moc_externalcommand.cpp \
		moc_globallog.cpp \
		moc_report.cpp
OBJECTS       = main.o \
		mainwindow.o \
		copysource.o \
		copysourcedevice.o \
		copysourcefile.o \
		copytarget.o \
		copytargetdevice.o \
		copytargetfile.o \
		devboard.o \
		device.o \
		libparted.o \
		operationrunner.o \
		operationstack.o \
		partition.o \
		partitionnode.o \
		partitionrole.o \
		partitiontable.o \
		ext2.o \
		ext3.o \
		ext4.o \
		extended.o \
		fat16.o \
		fat32.o \
		filesystem.o \
		filesystemfactory.o \
		hfs.o \
		hfsplus.o \
		jfs.o \
		linuxswap.o \
		ntfs.o \
		reiser4.o \
		reiserfs.o \
		ufs.o \
		unformatted.o \
		unknown.o \
		xfs.o \
		parttablewidget.o \
		partwidget.o \
		partwidgetbase.o \
		backupfilesystemjob.o \
		checkfilesystemjob.o \
		copyfilesystemjob.o \
		createfilesystemjob.o \
		createpartitionjob.o \
		createpartitiontablejob.o \
		deletefilesystemjob.o \
		deletepartitionjob.o \
		job.o \
		movefilesystemjob.o \
		resizefilesystemjob.o \
		restorefilesystemjob.o \
		setfilesystemlabeljob.o \
		setpartflagsjob.o \
		setpartgeometryjob.o \
		backupoperation.o \
		checkoperation.o \
		copyoperation.o \
		createfilesystemoperation.o \
		createpartitiontableoperation.o \
		deleteoperation.o \
		newoperation.o \
		operation.o \
		resizeoperation.o \
		restoreoperation.o \
		setfilesystemlabeloperation.o \
		setpartflagsoperation.o \
		capacity.o \
		externalcommand.o \
		globallog.o \
		helpers.o \
		report.o \
		moc_mainwindow.o \
		moc_device.o \
		moc_operationrunner.o \
		moc_partitionnode.o \
		moc_parttablewidget.o \
		moc_partwidget.o \
		moc_job.o \
		moc_backupoperation.o \
		moc_checkoperation.o \
		moc_copyoperation.o \
		moc_createfilesystemoperation.o \
		moc_createpartitiontableoperation.o \
		moc_deleteoperation.o \
		moc_newoperation.o \
		moc_operation.o \
		moc_resizeoperation.o \
		moc_restoreoperation.o \
		moc_setfilesystemlabeloperation.o \
		moc_setpartflagsoperation.o \
		moc_externalcommand.o \
		moc_globallog.o \
		moc_report.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		companion.pro
QMAKE_TARGET  = companion
DESTDIR       = 
TARGET        = companion

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: companion.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++ -o Makefile companion.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri:
/usr/lib64/qt4/mkspecs/modules/qt_webkit.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/shared.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++ -o Makefile companion.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/companion1.0.0 || $(MKDIR) .tmp/companion1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/companion1.0.0/ && $(COPY_FILE) --parents mainwindow.h core/copysource.h core/copysourcedevice.h core/copysourcefile.h core/copytarget.h core/copytargetdevice.h core/copytargetfile.h core/devboard.h core/device.h core/libparted.h core/operationrunner.h core/operationstack.h core/partition.h core/partitionnode.h core/partitionrole.h core/partitiontable.h fs/ext2.h fs/ext3.h fs/ext4.h fs/extended.h fs/fat16.h fs/fat32.h fs/filesystem.h fs/filesystemfactory.h fs/hfs.h fs/hfsplus.h fs/jfs.h fs/linuxswap.h fs/ntfs.h fs/reiser4.h fs/reiserfs.h fs/ufs.h fs/unformatted.h fs/unknown.h fs/xfs.h gui/parttablewidget.h gui/partwidget.h gui/partwidgetbase.h jobs/backupfilesystemjob.h jobs/checkfilesystemjob.h jobs/copyfilesystemjob.h jobs/createfilesystemjob.h jobs/createpartitionjob.h jobs/createpartitiontablejob.h jobs/deletefilesystemjob.h jobs/deletepartitionjob.h jobs/job.h jobs/movefilesystemjob.h jobs/resizefilesystemjob.h jobs/restorefilesystemjob.h jobs/setfilesystemlabeljob.h jobs/setpartflagsjob.h jobs/setpartgeometryjob.h ops/backupoperation.h ops/checkoperation.h ops/copyoperation.h ops/createfilesystemoperation.h ops/createpartitiontableoperation.h ops/deleteoperation.h ops/newoperation.h ops/operation.h ops/resizeoperation.h ops/restoreoperation.h ops/setfilesystemlabeloperation.h ops/setpartflagsoperation.h util/capacity.h util/externalcommand.h util/globallog.h util/helpers.h util/libpartitionmanagerexport.h util/report.h .tmp/companion1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp core/copysource.cpp core/copysourcedevice.cpp core/copysourcefile.cpp core/copytarget.cpp core/copytargetdevice.cpp core/copytargetfile.cpp core/devboard.cpp core/device.cpp core/libparted.cpp core/operationrunner.cpp core/operationstack.cpp core/partition.cpp core/partitionnode.cpp core/partitionrole.cpp core/partitiontable.cpp fs/ext2.cpp fs/ext3.cpp fs/ext4.cpp fs/extended.cpp fs/fat16.cpp fs/fat32.cpp fs/filesystem.cpp fs/filesystemfactory.cpp fs/hfs.cpp fs/hfsplus.cpp fs/jfs.cpp fs/linuxswap.cpp fs/ntfs.cpp fs/reiser4.cpp fs/reiserfs.cpp fs/ufs.cpp fs/unformatted.cpp fs/unknown.cpp fs/xfs.cpp gui/parttablewidget.cpp gui/partwidget.cpp gui/partwidgetbase.cpp jobs/backupfilesystemjob.cpp jobs/checkfilesystemjob.cpp jobs/copyfilesystemjob.cpp jobs/createfilesystemjob.cpp jobs/createpartitionjob.cpp jobs/createpartitiontablejob.cpp jobs/deletefilesystemjob.cpp jobs/deletepartitionjob.cpp jobs/job.cpp jobs/movefilesystemjob.cpp jobs/resizefilesystemjob.cpp jobs/restorefilesystemjob.cpp jobs/setfilesystemlabeljob.cpp jobs/setpartflagsjob.cpp jobs/setpartgeometryjob.cpp ops/backupoperation.cpp ops/checkoperation.cpp ops/copyoperation.cpp ops/createfilesystemoperation.cpp ops/createpartitiontableoperation.cpp ops/deleteoperation.cpp ops/newoperation.cpp ops/operation.cpp ops/resizeoperation.cpp ops/restoreoperation.cpp ops/setfilesystemlabeloperation.cpp ops/setpartflagsoperation.cpp util/capacity.cpp util/externalcommand.cpp util/globallog.cpp util/helpers.cpp util/report.cpp .tmp/companion1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/companion1.0.0/ && (cd `dirname .tmp/companion1.0.0` && $(TAR) companion1.0.0.tar companion1.0.0 && $(COMPRESS) companion1.0.0.tar) && $(MOVE) `dirname .tmp/companion1.0.0`/companion1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/companion1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_device.cpp moc_operationrunner.cpp moc_partitionnode.cpp moc_parttablewidget.cpp moc_partwidget.cpp moc_job.cpp moc_backupoperation.cpp moc_checkoperation.cpp moc_copyoperation.cpp moc_createfilesystemoperation.cpp moc_createpartitiontableoperation.cpp moc_deleteoperation.cpp moc_newoperation.cpp moc_operation.cpp moc_resizeoperation.cpp moc_restoreoperation.cpp moc_setfilesystemlabeloperation.cpp moc_setpartflagsoperation.cpp moc_externalcommand.cpp moc_globallog.cpp moc_report.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_device.cpp moc_operationrunner.cpp moc_partitionnode.cpp moc_parttablewidget.cpp moc_partwidget.cpp moc_job.cpp moc_backupoperation.cpp moc_checkoperation.cpp moc_copyoperation.cpp moc_createfilesystemoperation.cpp moc_createpartitiontableoperation.cpp moc_deleteoperation.cpp moc_newoperation.cpp moc_operation.cpp moc_resizeoperation.cpp moc_restoreoperation.cpp moc_setfilesystemlabeloperation.cpp moc_setpartflagsoperation.cpp moc_externalcommand.cpp moc_globallog.cpp moc_report.cpp
moc_mainwindow.cpp: util/libpartitionmanagerexport.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		mainwindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_device.cpp: core/device.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) core/device.h -o moc_device.cpp

moc_operationrunner.cpp: core/operationrunner.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) core/operationrunner.h -o moc_operationrunner.cpp

moc_partitionnode.cpp: core/partitionnode.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) core/partitionnode.h -o moc_partitionnode.cpp

moc_parttablewidget.cpp: gui/partwidgetbase.h \
		core/partitionnode.h \
		gui/parttablewidget.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) gui/parttablewidget.h -o moc_parttablewidget.cpp

moc_partwidget.cpp: gui/partwidgetbase.h \
		core/partitionnode.h \
		gui/parttablewidget.h \
		core/partition.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ui_mainwindow.h \
		gui/partwidget.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) gui/partwidget.h -o moc_partwidget.cpp

moc_job.cpp: fs/filesystem.h \
		jobs/job.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) jobs/job.h -o moc_job.cpp

moc_backupoperation.cpp: ops/operation.h \
		ops/backupoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/backupoperation.h -o moc_backupoperation.cpp

moc_checkoperation.cpp: ops/operation.h \
		ops/checkoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/checkoperation.h -o moc_checkoperation.cpp

moc_copyoperation.cpp: ops/operation.h \
		ops/copyoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/copyoperation.h -o moc_copyoperation.cpp

moc_createfilesystemoperation.cpp: ops/operation.h \
		fs/filesystem.h \
		ops/createfilesystemoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/createfilesystemoperation.h -o moc_createfilesystemoperation.cpp

moc_createpartitiontableoperation.cpp: ops/operation.h \
		ops/createpartitiontableoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/createpartitiontableoperation.h -o moc_createpartitiontableoperation.cpp

moc_deleteoperation.cpp: ops/operation.h \
		ops/deleteoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/deleteoperation.h -o moc_deleteoperation.cpp

moc_newoperation.cpp: ops/operation.h \
		ops/newoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/newoperation.h -o moc_newoperation.cpp

moc_operation.cpp: ops/operation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/operation.h -o moc_operation.cpp

moc_resizeoperation.cpp: ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ops/resizeoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/resizeoperation.h -o moc_resizeoperation.cpp

moc_restoreoperation.cpp: ops/operation.h \
		ops/restoreoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/restoreoperation.h -o moc_restoreoperation.cpp

moc_setfilesystemlabeloperation.cpp: ops/operation.h \
		ops/setfilesystemlabeloperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/setfilesystemlabeloperation.h -o moc_setfilesystemlabeloperation.cpp

moc_setpartflagsoperation.cpp: ops/operation.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		ops/setpartflagsoperation.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ops/setpartflagsoperation.h -o moc_setpartflagsoperation.cpp

moc_externalcommand.cpp: util/externalcommand.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) util/externalcommand.h -o moc_externalcommand.cpp

moc_globallog.cpp: util/libpartitionmanagerexport.h \
		util/globallog.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) util/globallog.h -o moc_globallog.cpp

moc_report.cpp: util/report.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) util/report.h -o moc_report.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui \
		gui/parttablewidget.h \
		gui/partwidgetbase.h \
		core/partitionnode.h
	/usr/lib64/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		util/libpartitionmanagerexport.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		util/libpartitionmanagerexport.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ui_mainwindow.h \
		core/devboard.h \
		core/device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

copysource.o: core/copysource.cpp core/copysource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copysource.o core/copysource.cpp

copysourcedevice.o: core/copysourcedevice.cpp core/copysourcedevice.h \
		core/copysource.h \
		core/copytarget.h \
		core/copytargetdevice.h \
		core/device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copysourcedevice.o core/copysourcedevice.cpp

copysourcefile.o: core/copysourcefile.cpp core/copysourcefile.h \
		core/copysource.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copysourcefile.o core/copysourcefile.cpp

copytarget.o: core/copytarget.cpp core/copytarget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copytarget.o core/copytarget.cpp

copytargetdevice.o: core/copytargetdevice.cpp core/copytargetdevice.h \
		core/copytarget.h \
		core/device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copytargetdevice.o core/copytargetdevice.cpp

copytargetfile.o: core/copytargetfile.cpp core/copytargetfile.h \
		core/copytarget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copytargetfile.o core/copytargetfile.cpp

devboard.o: core/devboard.cpp core/devboard.h \
		core/device.h \
		mainwindow.h \
		util/libpartitionmanagerexport.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		fs/filesystemfactory.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o devboard.o core/devboard.cpp

device.o: core/device.cpp core/device.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o device.o core/device.cpp

libparted.o: core/libparted.cpp core/libparted.h \
		core/device.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/operationstack.h \
		jobs/setpartflagsjob.h \
		jobs/job.h \
		fs/filesystem.h \
		fs/filesystemfactory.h \
		util/globallog.h \
		util/libpartitionmanagerexport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o libparted.o core/libparted.cpp

operationrunner.o: core/operationrunner.cpp core/operationrunner.h \
		core/operationstack.h \
		ops/operation.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o operationrunner.o core/operationrunner.cpp

operationstack.o: core/operationstack.cpp core/operationstack.h \
		core/device.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ops/operation.h \
		ops/deleteoperation.h \
		ops/newoperation.h \
		ops/resizeoperation.h \
		ops/copyoperation.h \
		ops/restoreoperation.h \
		ops/createfilesystemoperation.h \
		fs/filesystem.h \
		ops/setpartflagsoperation.h \
		ops/setfilesystemlabeloperation.h \
		jobs/setfilesystemlabeljob.h \
		jobs/job.h \
		fs/filesystemfactory.h \
		util/globallog.h \
		util/libpartitionmanagerexport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o operationstack.o core/operationstack.cpp

partition.o: core/partition.cpp core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		fs/filesystem.h \
		fs/filesystemfactory.h \
		util/externalcommand.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partition.o core/partition.cpp

partitionnode.o: core/partitionnode.cpp core/partitionnode.h \
		core/partition.h \
		core/partitionrole.h \
		core/partitiontable.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partitionnode.o core/partitionnode.cpp

partitionrole.o: core/partitionrole.cpp core/partitionrole.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partitionrole.o core/partitionrole.cpp

partitiontable.o: core/partitiontable.cpp core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partition.h \
		core/device.h \
		fs/filesystem.h \
		fs/filesystemfactory.h \
		util/globallog.h \
		util/libpartitionmanagerexport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partitiontable.o core/partitiontable.cpp

ext2.o: fs/ext2.cpp fs/ext2.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ext2.o fs/ext2.cpp

ext3.o: fs/ext3.cpp fs/ext3.h \
		fs/ext2.h \
		fs/filesystem.h \
		util/externalcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ext3.o fs/ext3.cpp

ext4.o: fs/ext4.cpp fs/ext4.h \
		fs/ext2.h \
		fs/filesystem.h \
		util/externalcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ext4.o fs/ext4.cpp

extended.o: fs/extended.cpp fs/extended.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o extended.o fs/extended.cpp

fat16.o: fs/fat16.cpp fs/fat16.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fat16.o fs/fat16.cpp

fat32.o: fs/fat32.cpp fs/fat32.h \
		fs/fat16.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fat32.o fs/fat32.cpp

filesystem.o: fs/filesystem.cpp fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filesystem.o fs/filesystem.cpp

filesystemfactory.o: fs/filesystemfactory.cpp fs/filesystemfactory.h \
		fs/filesystem.h \
		fs/ext2.h \
		fs/ext3.h \
		fs/ext4.h \
		fs/extended.h \
		fs/fat16.h \
		fs/fat32.h \
		fs/hfs.h \
		fs/hfsplus.h \
		fs/jfs.h \
		fs/linuxswap.h \
		fs/ntfs.h \
		fs/reiser4.h \
		fs/reiserfs.h \
		util/capacity.h \
		fs/ufs.h \
		fs/unformatted.h \
		fs/unknown.h \
		fs/xfs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o filesystemfactory.o fs/filesystemfactory.cpp

hfs.o: fs/hfs.cpp fs/hfs.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hfs.o fs/hfs.cpp

hfsplus.o: fs/hfsplus.cpp fs/hfsplus.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hfsplus.o fs/hfsplus.cpp

jfs.o: fs/jfs.cpp fs/jfs.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/report.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jfs.o fs/jfs.cpp

linuxswap.o: fs/linuxswap.cpp fs/linuxswap.h \
		fs/filesystem.h \
		util/externalcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o linuxswap.o fs/linuxswap.cpp

ntfs.o: fs/ntfs.cpp fs/ntfs.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h \
		util/report.h \
		util/globallog.h \
		util/libpartitionmanagerexport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ntfs.o fs/ntfs.cpp

reiser4.o: fs/reiser4.cpp fs/reiser4.h \
		fs/filesystem.h \
		util/externalcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reiser4.o fs/reiser4.cpp

reiserfs.o: fs/reiserfs.cpp fs/reiserfs.h \
		fs/filesystem.h \
		util/capacity.h \
		util/externalcommand.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reiserfs.o fs/reiserfs.cpp

ufs.o: fs/ufs.cpp fs/ufs.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ufs.o fs/ufs.cpp

unformatted.o: fs/unformatted.cpp fs/unformatted.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o unformatted.o fs/unformatted.cpp

unknown.o: fs/unknown.cpp fs/unknown.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o unknown.o fs/unknown.cpp

xfs.o: fs/xfs.cpp fs/xfs.h \
		fs/filesystem.h \
		util/externalcommand.h \
		util/capacity.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o xfs.o fs/xfs.cpp

parttablewidget.o: gui/parttablewidget.cpp gui/parttablewidget.h \
		gui/partwidgetbase.h \
		core/partitionnode.h \
		gui/partwidget.h \
		core/partition.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o parttablewidget.o gui/parttablewidget.cpp

partwidget.o: gui/partwidget.cpp gui/partwidget.h \
		gui/partwidgetbase.h \
		core/partitionnode.h \
		gui/parttablewidget.h \
		core/partition.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ui_mainwindow.h \
		util/capacity.h \
		core/operationstack.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partwidget.o gui/partwidget.cpp

partwidgetbase.o: gui/partwidgetbase.cpp gui/partwidgetbase.h \
		core/partitionnode.h \
		gui/partwidget.h \
		gui/parttablewidget.h \
		core/partition.h \
		core/partitionrole.h \
		core/partitiontable.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o partwidgetbase.o gui/partwidgetbase.cpp

backupfilesystemjob.o: jobs/backupfilesystemjob.cpp jobs/backupfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		core/copysourcedevice.h \
		core/copysource.h \
		core/copytargetfile.h \
		core/copytarget.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o backupfilesystemjob.o jobs/backupfilesystemjob.cpp

checkfilesystemjob.o: jobs/checkfilesystemjob.cpp jobs/checkfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkfilesystemjob.o jobs/checkfilesystemjob.cpp

copyfilesystemjob.o: jobs/copyfilesystemjob.cpp jobs/copyfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		core/copysourcedevice.h \
		core/copysource.h \
		core/copytargetdevice.h \
		core/copytarget.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copyfilesystemjob.o jobs/copyfilesystemjob.cpp

createfilesystemjob.o: jobs/createfilesystemjob.cpp jobs/createfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createfilesystemjob.o jobs/createfilesystemjob.cpp

createpartitionjob.o: jobs/createpartitionjob.cpp jobs/createpartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createpartitionjob.o jobs/createpartitionjob.cpp

createpartitiontablejob.o: jobs/createpartitiontablejob.cpp jobs/createpartitiontablejob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/device.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createpartitiontablejob.o jobs/createpartitiontablejob.cpp

deletefilesystemjob.o: jobs/deletefilesystemjob.cpp jobs/deletefilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o deletefilesystemjob.o jobs/deletefilesystemjob.cpp

deletepartitionjob.o: jobs/deletepartitionjob.cpp jobs/deletepartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o deletepartitionjob.o jobs/deletepartitionjob.cpp

job.o: jobs/job.cpp jobs/job.h \
		fs/filesystem.h \
		core/device.h \
		core/copysource.h \
		core/copytarget.h \
		core/copysourcedevice.h \
		core/copytargetdevice.h \
		util/externalcommand.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o job.o jobs/job.cpp

movefilesystemjob.o: jobs/movefilesystemjob.cpp jobs/movefilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		core/copysourcedevice.h \
		core/copysource.h \
		core/copytargetdevice.h \
		core/copytarget.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o movefilesystemjob.o jobs/movefilesystemjob.cpp

resizefilesystemjob.o: jobs/resizefilesystemjob.cpp jobs/resizefilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		util/report.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o resizefilesystemjob.o jobs/resizefilesystemjob.cpp

restorefilesystemjob.o: jobs/restorefilesystemjob.cpp jobs/restorefilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		core/copysourcefile.h \
		core/copysource.h \
		core/copytargetdevice.h \
		core/copytarget.h \
		fs/filesystemfactory.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o restorefilesystemjob.o jobs/restorefilesystemjob.cpp

setfilesystemlabeljob.o: jobs/setfilesystemlabeljob.cpp jobs/setfilesystemlabeljob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setfilesystemlabeljob.o jobs/setfilesystemlabeljob.cpp

setpartflagsjob.o: jobs/setpartflagsjob.cpp jobs/setpartflagsjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/device.h \
		core/partition.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setpartflagsjob.o jobs/setpartflagsjob.cpp

setpartgeometryjob.o: jobs/setpartgeometryjob.cpp jobs/setpartgeometryjob.h \
		jobs/job.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setpartgeometryjob.o jobs/setpartgeometryjob.cpp

backupoperation.o: ops/backupoperation.cpp ops/backupoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		jobs/backupfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o backupoperation.o ops/backupoperation.cpp

checkoperation.o: ops/checkoperation.cpp ops/checkoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		jobs/checkfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/resizefilesystemjob.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkoperation.o ops/checkoperation.cpp

copyoperation.o: ops/copyoperation.cpp ops/copyoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		jobs/createpartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/deletepartitionjob.h \
		jobs/checkfilesystemjob.h \
		jobs/copyfilesystemjob.h \
		jobs/resizefilesystemjob.h \
		fs/filesystemfactory.h \
		util/capacity.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o copyoperation.o ops/copyoperation.cpp

createfilesystemoperation.o: ops/createfilesystemoperation.cpp ops/createfilesystemoperation.h \
		ops/operation.h \
		fs/filesystem.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		jobs/deletefilesystemjob.h \
		jobs/job.h \
		jobs/createfilesystemjob.h \
		jobs/checkfilesystemjob.h \
		fs/filesystemfactory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createfilesystemoperation.o ops/createfilesystemoperation.cpp

createpartitiontableoperation.o: ops/createpartitiontableoperation.cpp ops/createpartitiontableoperation.h \
		ops/operation.h \
		core/device.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partition.h \
		jobs/createpartitiontablejob.h \
		jobs/job.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createpartitiontableoperation.o ops/createpartitiontableoperation.cpp

deleteoperation.o: ops/deleteoperation.cpp ops/deleteoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		jobs/deletepartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/deletefilesystemjob.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o deleteoperation.o ops/deleteoperation.cpp

newoperation.o: ops/newoperation.cpp ops/newoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		jobs/createpartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/createfilesystemjob.h \
		jobs/setfilesystemlabeljob.h \
		jobs/checkfilesystemjob.h \
		fs/filesystemfactory.h \
		util/capacity.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o newoperation.o ops/newoperation.cpp

operation.o: ops/operation.cpp ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		jobs/job.h \
		fs/filesystem.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o operation.o ops/operation.cpp

resizeoperation.o: ops/resizeoperation.cpp ops/resizeoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		core/copysourcedevice.h \
		core/copysource.h \
		core/copytargetdevice.h \
		core/copytarget.h \
		jobs/checkfilesystemjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/setpartgeometryjob.h \
		jobs/resizefilesystemjob.h \
		jobs/movefilesystemjob.h \
		util/capacity.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o resizeoperation.o ops/resizeoperation.cpp

restoreoperation.o: ops/restoreoperation.cpp ops/restoreoperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h \
		jobs/createpartitionjob.h \
		jobs/job.h \
		fs/filesystem.h \
		jobs/deletepartitionjob.h \
		jobs/checkfilesystemjob.h \
		jobs/restorefilesystemjob.h \
		jobs/resizefilesystemjob.h \
		fs/filesystemfactory.h \
		util/capacity.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o restoreoperation.o ops/restoreoperation.cpp

setfilesystemlabeloperation.o: ops/setfilesystemlabeloperation.cpp ops/setfilesystemlabeloperation.h \
		ops/operation.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		jobs/setfilesystemlabeljob.h \
		jobs/job.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setfilesystemlabeloperation.o ops/setfilesystemlabeloperation.cpp

setpartflagsoperation.o: ops/setpartflagsoperation.cpp ops/setpartflagsoperation.h \
		ops/operation.h \
		core/partitiontable.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partition.h \
		jobs/setpartflagsjob.h \
		jobs/job.h \
		fs/filesystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setpartflagsoperation.o ops/setpartflagsoperation.cpp

capacity.o: util/capacity.cpp util/capacity.h \
		core/partition.h \
		core/partitionnode.h \
		core/partitionrole.h \
		core/partitiontable.h \
		core/device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o capacity.o util/capacity.cpp

externalcommand.o: util/externalcommand.cpp util/externalcommand.h \
		util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o externalcommand.o util/externalcommand.cpp

globallog.o: util/globallog.cpp util/globallog.h \
		util/libpartitionmanagerexport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o globallog.o util/globallog.cpp

helpers.o: util/helpers.cpp util/helpers.h \
		util/libpartitionmanagerexport.h \
		util/globallog.h \
		ops/operation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpers.o util/helpers.cpp

report.o: util/report.cpp util/report.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o report.o util/report.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_device.o: moc_device.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_device.o moc_device.cpp

moc_operationrunner.o: moc_operationrunner.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_operationrunner.o moc_operationrunner.cpp

moc_partitionnode.o: moc_partitionnode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_partitionnode.o moc_partitionnode.cpp

moc_parttablewidget.o: moc_parttablewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_parttablewidget.o moc_parttablewidget.cpp

moc_partwidget.o: moc_partwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_partwidget.o moc_partwidget.cpp

moc_job.o: moc_job.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_job.o moc_job.cpp

moc_backupoperation.o: moc_backupoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_backupoperation.o moc_backupoperation.cpp

moc_checkoperation.o: moc_checkoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_checkoperation.o moc_checkoperation.cpp

moc_copyoperation.o: moc_copyoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_copyoperation.o moc_copyoperation.cpp

moc_createfilesystemoperation.o: moc_createfilesystemoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createfilesystemoperation.o moc_createfilesystemoperation.cpp

moc_createpartitiontableoperation.o: moc_createpartitiontableoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createpartitiontableoperation.o moc_createpartitiontableoperation.cpp

moc_deleteoperation.o: moc_deleteoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_deleteoperation.o moc_deleteoperation.cpp

moc_newoperation.o: moc_newoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_newoperation.o moc_newoperation.cpp

moc_operation.o: moc_operation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_operation.o moc_operation.cpp

moc_resizeoperation.o: moc_resizeoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_resizeoperation.o moc_resizeoperation.cpp

moc_restoreoperation.o: moc_restoreoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_restoreoperation.o moc_restoreoperation.cpp

moc_setfilesystemlabeloperation.o: moc_setfilesystemlabeloperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_setfilesystemlabeloperation.o moc_setfilesystemlabeloperation.cpp

moc_setpartflagsoperation.o: moc_setpartflagsoperation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_setpartflagsoperation.o moc_setpartflagsoperation.cpp

moc_externalcommand.o: moc_externalcommand.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_externalcommand.o moc_externalcommand.cpp

moc_globallog.o: moc_globallog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_globallog.o moc_globallog.cpp

moc_report.o: moc_report.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_report.o moc_report.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

